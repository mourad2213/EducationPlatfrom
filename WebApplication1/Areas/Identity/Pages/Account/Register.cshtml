@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />

            <!-- Common Fields -->
            <div class="form-floating mb-3">
                <input type="email" name="Email" class="form-control" placeholder="Email" required />
                <label for="Email">Email</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" name="Password" class="form-control" placeholder="Password" required />
                <label for="Password">Password</label>
            </div>

            <!-- Role Selection -->
            <div class="form-group mb-3">
                <label for="userRole">Select Role</label>
                <select id="userRole" class="form-control" name="Role" required>
                    <option value="" selected disabled>Select</option>
                    <option value="Learner">Learner</option>
                    <option value="Instructor">Instructor</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>

            <!-- Fields specific to Learner -->
            <div id="learnerFields" class="d-none">
                <div class="form-floating mb-3">
                    <input name="FullName" class="form-control" placeholder="Full Name" />
                    <label for="FullName">Full Name</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="date" name="Birthday" class="form-control" placeholder="Birthday" />
                    <label for="Birthday">Birthday</label>
                </div>
                <div class="form-group mb-3">
                    <label for="Gender">Gender</label>
                    <select name="Gender" class="form-control">
                        <option value="" selected disabled>Select</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group mb-3">
                    <label for="ExperienceLevel">Experience Level</label>
                    <select name="ExperienceLevel" class="form-control">
                        <option value="" selected disabled>Select</option>
                        <option value="Beginner">Beginner</option>
                        <option value="Intermediate">Intermediate</option>
                        <option value="Expert">Expert</option>
                    </select>
                </div>
                <div class="form-floating mb-3">
                    <input name="CountryOfOrigin" class="form-control" placeholder="Country of Origin" />
                    <label for="CountryOfOrigin">Country of Origin</label>
                </div>
            </div>

            <!-- Fields specific to Instructor -->
            <div id="instructorFields" class="d-none">
                <div class="form-floating mb-3">
                    <input name="InstructorField1" class="form-control" placeholder="Instructor Field 1" />
                    <label for="InstructorField1">Instructor Field 1</label>
                </div>
                <div class="form-floating mb-3">
                    <input name="InstructorField2" class="form-control" placeholder="Instructor Field 2" />
                    <label for="InstructorField2">Instructor Field 2</label>
                </div>
            </div>

            <!-- Fields specific to Admin -->
            <div id="adminFields" class="d-none">
                <div class="form-floating mb-3">
                    <input name="AdminField1" class="form-control" placeholder="Admin Field 1" />
                    <label for="AdminField1">Admin Field 1</label>
                </div>
                <div class="form-floating mb-3">
                    <input name="AdminField2" class="form-control" placeholder="Admin Field 2" />
                    <label for="AdminField2">Admin Field 2</label>
                </div>
            </div>

            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                            article
                            about setting up this ASP.NET application to support logging in via external services
                        </a>.
                    </p>
                </div>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in Model.ExternalLogins!)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                            }
                        </p>
                    </div>
                </form>
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById('userRole').addEventListener('change', function () {
            const learnerFields = document.getElementById('learnerFields');
            const instructorFields = document.getElementById('instructorFields');
            const adminFields = document.getElementById('adminFields');

            learnerFields.classList.add('d-none');
            instructorFields.classList.add('d-none');
            adminFields.classList.add('d-none');

            if (this.value === 'Learner') {
                learnerFields.classList.remove('d-none');
            } else if (this.value === 'Instructor') {
                instructorFields.classList.remove('d-none');
            } else if (this.value === 'Admin') {
                adminFields.classList.remove('d-none');
            }
        });
    </script>
}
